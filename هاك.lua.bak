
local Configs_HUB = {
    Cor_Hub = Color3.fromRGB(0, 0, 0),
    Cor_Options = Color3.fromRGB(0, 0, 0),
    Cor_Stroke = Color3.fromRGB(0, 255, 200),
    Cor_Text = Color3.fromRGB(240, 240, 240),
    Cor_DarkText = Color3.fromRGB(200, 200, 200),
    Corner_Radius = UDim.new(0, 4),
    Text_Font = Enum.Font.FredokaOne,
    BackgroundImage = ""
}

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")

local function Create(instance, parent, props)
    local new = Instance.new(instance, parent)
    if props then
        for prop, value in pairs(props) do
            new[prop] = value
        end
    end
    return new
end

local function Corner(parent, props)
    local new = Create("UICorner", parent)
    new.CornerRadius = Configs_HUB.Corner_Radius
    if props then
        for k, v in pairs(props) do
            new[k] = v
        end
    end
    return new
end

local function Stroke(parent, props)
    local new = Create("UIStroke", parent)
    new.Color = Configs_HUB.Cor_Stroke
    new.ApplyStrokeMode = "Border"
    new.Thickness = 2
    if props then
        for k, v in pairs(props) do
            new[k] = v
        end
    end
    return new
end

local function CreateTween(instance, prop, value, time, tweenWait)
    local tween = TweenService:Create(instance, TweenInfo.new(time, Enum.EasingStyle.Linear), {[prop]=value})
    tween:Play()
    if tweenWait then
        tween.Completed:Wait()
    end
end

local function TextSetColor(instance)
    instance.MouseEnter:Connect(function()
        CreateTween(instance, "TextColor3", Color3.fromRGB(30,140,200), 0.4, true)
    end)
    instance.MouseLeave:Connect(function()
        CreateTween(instance, "TextColor3", Configs_HUB.Cor_Text, 0.4, false)
    end)
end

local ScreenGui = Create("ScreenGui", CoreGui, {Name = "Custom_HUB"})

local Menu = Create("Frame", ScreenGui, {
    Size = UDim2.new(0, 500, 0, 270),
    Position = UDim2.new(0.5, -250, 0.5, -135),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 0.7,
    Active = true,
    Draggable = true
})
Corner(Menu)

local bg = Create("ImageLabel", Menu, {
    Size = UDim2.new(1,0,1,0),
    Position = UDim2.new(0,0,0,0),
    BackgroundTransparency = 1,
    Image = Configs_HUB.BackgroundImage,
    ScaleType = Enum.ScaleType.Stretch,
    ZIndex = 0
})

local TopBar = Create("Frame", Menu, {
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 0, 25)
})
local Title = Create("TextLabel", TopBar, {
    Size=UDim2.new(1,0,1,0),
    Position=UDim2.new(0,20,0,0),
    TextColor3=Configs_HUB.Cor_Text,
    Font=Configs_HUB.Text_Font,
    TextXAlignment=Enum.TextXAlignment.Left,
    Text="DARK HUB",
    TextSize=20,
    BackgroundTransparency=1
})

local ButtonsFrame = Create("Frame", TopBar, {
    Size=UDim2.new(0,80,1,0),
    Position=UDim2.new(1,-10,0,0),
    BackgroundTransparency=1,
    AnchorPoint=Vector2.new(1,0)
})

local Minimize_BTN = Create("TextButton", ButtonsFrame, {
    Text="-",
    TextColor3=Configs_HUB.Cor_Text,
    Size=UDim2.new(0.5,0,1,0),
    BackgroundTransparency=1,
    Font=Configs_HUB.Text_Font,
    TextYAlignment=Enum.TextYAlignment.Bottom,
    TextSize=25
})
local Close_Button = Create("TextButton", ButtonsFrame, {
    Text="Ã—",
    TextColor3=Configs_HUB.Cor_Text,
    Size=UDim2.new(0.5,0,1,0),
    AnchorPoint=Vector2.new(1,0),
    Position=UDim2.new(1,0,0,0),
    BackgroundTransparency=1,
    Font=Configs_HUB.Text_Font,
    TextSize=25
})

local IsMinimized = false
Minimize_BTN.MouseButton1Click:Connect(function()
    if IsMinimized then
        IsMinimized=false
        Minimize_BTN.Text="-"
        CreateTween(Menu,"Size",UDim2.new(0,500,0,270),0.15,false)
    else
        IsMinimized=true
        Minimize_BTN.Text="+"
        CreateTween(Menu,"Size",UDim2.new(0,500,0,25),0.15,true)
    end
end)

Close_Button.MouseButton1Click:Connect(function()
    CreateTween(Menu,"Size",UDim2.new(),0.3,true)
    ScreenGui:Destroy()
end)

local ScrollBar = Create("ScrollingFrame", Menu, {
    Size=UDim2.new(0,140,1,-30),
    Position=UDim2.new(0,0,0,25),
    BackgroundTransparency=1,
    ScrollingDirection="Y",
    AutomaticCanvasSize="Y",
    ScrollBarThickness=2
})
Create("UIPadding", ScrollBar, {PaddingLeft=UDim.new(0,10), PaddingRight=UDim.new(0,10), PaddingTop=UDim.new(0,10), PaddingBottom=UDim.new(0,10)})
Create("UIListLayout", ScrollBar, {Padding=UDim.new(0,5)})

local Containers = Create("Frame", Menu, {
    Size=UDim2.new(1,-140,1,-25),
    Position=UDim2.new(0,140,0,25),
    BackgroundTransparency=1
})
Corner(Containers)
Stroke(Containers)

local firstVisible = true
local textsize = 14
local textcolor = Configs_HUB.Cor_DarkText

function MinimizeButton(Configs)
    local openImage = Configs.OpenImage or ""
    local closeImage = Configs.CloseImage or ""
    local size = Configs.Size or {30, 30}
    local color = Configs.Color or Configs_HUB.Cor_Hub
    local corner = Configs.Corner or true
    local stroke = Configs.Stroke or false
    local strokecolor = Configs.StrokeColor or Configs_HUB.Cor_Stroke

    local Button = Create("ImageButton", ScreenGui, {
        Size = UDim2.new(0, size[1], 0, size[2]),
        Position = UDim2.new(0.15, 0, 0.15, 0),
        BackgroundColor3 = color,
        Image = openImage,
        Active = true,
        Draggable = true
    })
    if corner then Corner(Button) end
    if stroke then Stroke(Button, {Color = strokecolor}) end

    local minimize = false
    Button.MouseButton1Click:Connect(function()
        if minimize then
            minimize = false
            Menu.Visible = true
            Button.Image = openImage
            if not IsMinimized then
                CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 270), 0.3, false)
            else
                CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 25), 0.3, false)
            end
        else
            minimize = true
            Button.Image = closeImage
            CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 0), 0.3, true)
            Menu.Visible = false
        end
    end)
end

local ScrollBar = Create("ScrollingFrame", Menu, {
    Size = UDim2.new(0, 140, 1, -tonumber(TopBar.Size.Y.Offset + 2)),
    Position = UDim2.new(0, 0, 1, 0),
    AnchorPoint = Vector2.new(0, 1),
    CanvasSize = UDim2.new(),
    ScrollingDirection = "Y",
    AutomaticCanvasSize = "Y",
    BackgroundTransparency = 1,
    ScrollBarThickness = 2
})
Create("UIPadding", ScrollBar, {
    PaddingLeft = UDim.new(0, 10),
    PaddingRight = UDim.new(0, 10),
    PaddingTop = UDim.new(0, 10),
    PaddingBottom = UDim.new(0, 10)
})
Create("UIListLayout", ScrollBar, {Padding = UDim.new(0, 5)})

local Containers = Create("Frame", Menu, {
    Size = UDim2.new(1, -tonumber(ScrollBar.Size.X.Offset + 2), 1, -tonumber(TopBar.Size.Y.Offset + 2)),
    AnchorPoint = Vector2.new(1, 1),
    Position = UDim2.new(1, 0, 1, 0),
    BackgroundTransparency = 1
})
Corner(Containers)
function MakeTab(Configs)
    local TabName = Configs.Name or "Tab"
    local TabTitle = Configs.TabTitle or false
    local TabImage = Configs.Image or nil

    local Frame = Create("Frame", ScrollBar, {Size = UDim2.new(1, 0, 0, 25), BackgroundTransparency = 1})
    Corner(Frame)
    Stroke(Frame)

    local TextButton = Create("TextButton", Frame, {Size = UDim2.new(1, 0, 1, 0), BackgroundTransparency = 1, Text = ""})

    if TabImage then
        Create("ImageLabel", Frame, {
            Size = UDim2.new(0, 20, 0, 20),
            Position = UDim2.new(0, 5, 0.5, -10),
            BackgroundTransparency = 1,
            Image = TabImage,
            Name = "TabIcon"
        })
    end

    local textOffset = TabImage and 30 or 5
    local TextLabel = Create("TextLabel", Frame, {
        Size = UDim2.new(1, -textOffset, 1, 0),
        Position = UDim2.new(0, textOffset, 0, 0),
        BackgroundTransparency = 1,
        Font = Configs_HUB.Text_Font,
        TextColor3 = textcolor,
        TextSize = textsize,
        Text = TabName,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    local ContainerTab = Create("ScrollingFrame", Containers, {
        Size = UDim2.new(1, 0, 1, 0),
        ScrollingDirection = "Y",
        AutomaticCanvasSize = "Y",
        BackgroundTransparency = 1,
        ScrollBarThickness = 2,
        Visible = firstVisible
    })

    Create("UIPadding", ContainerTab, {PaddingLeft = UDim.new(0, 10), PaddingRight = UDim.new(0, 10), PaddingTop = UDim.new(0, 10), PaddingBottom = UDim.new(0, 10)})
    Create("UIListLayout", ContainerTab, {Padding = UDim.new(0, 5)})

    if TabTitle then
        Create("TextLabel", ContainerTab, {
            BackgroundTransparency = 1,
            Text = "#" .. string.gsub(TabName, " ", "-"),
            TextSize = 25,
            Font = Configs_HUB.Text_Font,
            TextXAlignment = Enum.TextXAlignment.Left,
            TextColor3 = Configs_HUB.Cor_Text,
            Size = UDim2.new(1, 0, 0, 30),
            Position = UDim2.new(0, 30, 0, 0),
            Name = "Frame"
        })
    end

    TextButton.MouseButton1Click:Connect(function()
        for _, container in pairs(Containers:GetChildren()) do
            if container:IsA("ScrollingFrame") then container.Visible = false end
        end
        for _, frame in pairs(ScrollBar:GetChildren()) do
            if frame:IsA("Frame") and frame:FindFirstChild("TextLabel") and frame.TextLabel ~= TextLabel then
                CreateTween(frame.TextLabel, "TextColor3", Configs_HUB.Cor_DarkText, 0.3, false)
                frame.TextLabel.TextSize = 14
            end
        end
        ContainerTab.Visible = true
        CreateTween(TextLabel, "TextColor3", Configs_HUB.Cor_Text, 0.3, false)
        TextLabel.TextSize = 15
    end)

    firstVisible = false
    return ContainerTab
end
function AddButton(parent, Configs)
    local ButtonName = Configs.Name or "Button"
    local Callback = Configs.Callback or function() end
    
    local TextButton = Create("TextButton", parent, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Text = "",
        AutoButtonColor = false
    })
    Corner(TextButton)
    Stroke(TextButton)
    
    local TextLabel = Create("TextLabel", TextButton, {
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = ButtonName,
        Size = UDim2.new(1, 0, 1, 0),
        Position = UDim2.new(0, 35, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Configs_HUB.Text_Font
    })
    
    local ImageLabel = Create("ImageLabel", TextButton, {
        Image = "rbxassetid://99956220697276",
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(0, 5, 0, 2.5),
        BackgroundTransparency = 1,
        ImageColor3 = Configs_HUB.Cor_Stroke
    })
    
    TextButton.MouseButton1Click:Connect(function()
        Callback()
        CreateTween(ImageLabel, "ImageColor3", Color3.fromRGB(30, 140, 200), 0.2, true)
        CreateTween(ImageLabel, "ImageColor3", Configs_HUB.Cor_Stroke, 0.2, false)
    end)
    
    TextSetColor(TextLabel)
end

function AddToggle(parent, Configs)
    local ToggleName = Configs.Name or "Toggle"
    local Default = Configs.Default or false
    local Callback = Configs.Callback or function() end
    
    local TextButton = Create("TextButton", parent, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Name = "Frame",
        Text = "",
        AutoButtonColor = false
    })
    Corner(TextButton)
    Stroke(TextButton)
    
    local TextLabel = Create("TextLabel", TextButton, {
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = ToggleName,
        Size = UDim2.new(1, 0, 1, 0),
        Position = UDim2.new(0, 35, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Configs_HUB.Text_Font
    })
    
    local Frame1 = Create("Frame", TextButton, {
        Size = UDim2.new(0, 25, 0, 15),
        Position = UDim2.new(0, 5, 0, 5),
        BackgroundTransparency = 1,
    })
    Corner(Frame1, {CornerRadius = UDim.new(1, 0)})
    local StrokeFrame = Stroke(Frame1, {Thickness = 2})
    
    local Frame2 = Create("Frame", Frame1, {
        Size = UDim2.new(0, 13, 0, 13),
        Position = UDim2.new(0, 2, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Stroke
    })
    Corner(Frame2, {CornerRadius = UDim.new(1, 0)})
    
    local OnOff = false
    if Default then
        OnOff = true
        CreateTween(Frame2, "Position", UDim2.new(0, 10, 0.5, 0), 0.2, false)
        CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(30, 140, 200), 0.2, false)
        CreateTween(StrokeFrame, "Color", Color3.fromRGB(30, 140, 200), 0.2, false)
        CreateTween(TextLabel, "TextColor3", Color3.fromRGB(30, 140, 200), 0.2, false)
    end
    Callback(OnOff)
    
    TextButton.MouseButton1Click:Connect(function()
        if OnOff == false then
            OnOff = true
            CreateTween(Frame2, "Position", UDim2.new(0, 10, 0.5, 0), 0.2, false)
            CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(30, 140, 200), 0.2, false)
            CreateTween(StrokeFrame, "Color", Color3.fromRGB(30, 140, 200), 0.2, false)
            CreateTween(TextLabel, "TextColor3", Color3.fromRGB(30, 140, 200), 0.2, false)
            Callback(true)
        else
            OnOff = false
            CreateTween(Frame2, "Position", UDim2.new(0, 2, 0.5, 0), 0.2, false)
            CreateTween(Frame2, "BackgroundColor3", Configs_HUB.Cor_Stroke, 0.2, false)
            CreateTween(StrokeFrame, "Color", Configs_HUB.Cor_Stroke, 0.2, false)
            CreateTween(TextLabel, "TextColor3", Configs_HUB.Cor_Text, 0.2, false)
            Callback(false)
        end
    end)
    return {Frame2, StrokeFrame, OnOff, Callback}
end

function UpdateToggle(toggle, value)
    local Frame2 = toggle[1]
    local StrokeFrame = toggle[2]
    local Callback = toggle[4]
    
    if value then
        CreateTween(Frame2, "Position", UDim2.new(0, 10, 0.5, 0), 0.2, false)
        CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(30, 140, 200), 0.2, false)
        CreateTween(StrokeFrame, "Color", Color3.fromRGB(30, 140, 200), 0.2, false)
        Callback(true)
    else
        CreateTween(Frame2, "Position", UDim2.new(0, 2, 0.5, 0), 0.2, false)
        CreateTween(Frame2, "BackgroundColor3", Configs_HUB.Cor_Stroke, 0.2, false)
        CreateTween(StrokeFrame, "Color", Configs_HUB.Cor_Stroke, 0.2, false)
        Callback(false)
    end
end

function AddMobileToggle(Configs)
    local name = Configs.Name or "Atalho"
    local Callback = Configs.Callback or function() end
    local visible = Configs.Visible or false
    
    local Toggle_Atalho = Create("Frame", ScreenGui, {
        Size = UDim2.new(0, 100, 0, 60),
        Position = UDim2.new(0.8, 0, 0.8, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Hub,
        Draggable = true,
        Active = true,
        Visible = visible
    })
    Corner(Toggle_Atalho)
    
    local TextLabel = Create("TextLabel", Toggle_Atalho, {
        Size = UDim2.new(1, 0, 0, 20),
        TextSize = 20,
        Font = Configs_HUB.Text_Font,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = name,
        BackgroundTransparency = 1
    })
    
    local Button = Create("TextButton", Toggle_Atalho, {
        Size = UDim2.new(1, 0, 0, 40),
        Position = UDim2.new(0, 0, 0, 20),
        BackgroundTransparency = 1,
        Text = ""
    })
    
    local Frame = Create("Frame", Button, {
        Position = UDim2.new(0.5, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        Size = UDim2.new(1, -40, 1, -15),
        BackgroundTransparency = 1
    })
    Corner(Frame, {CornerRadius = UDim.new(2, 0)})
    
    local Frame2 = Create("Frame", Frame, {
        Position = UDim2.new(0, 5, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        Size = UDim2.new(0, 17, 0, 17),
        BackgroundTransparency = 1
    })
    Corner(Frame2, {CornerRadius = UDim.new(5, 0)})
    
    local stroke1 = Stroke(Frame, {Color = Color3.fromRGB(100, 100, 100), Thickness = 3})
    local stroke2 = Stroke(Frame2, {Color = Color3.fromRGB(100, 100, 100), Thickness = 3})
    
    local OnOff = false
    Callback(OnOff)
    Button.MouseButton1Click:Connect(function()
        if OnOff == false then
            CreateTween(Frame2, "Position", UDim2.new(1, -22, 0.5, 0), 0.2, false)
        else
            CreateTween(Frame2, "Position", UDim2.new(0, 5, 0.5, 0), 0.2, false)
        end
        OnOff = not OnOff
        Callback(OnOff)
    end)
    
    return Toggle_Atalho
end

function AddDropdown(parent, Configs)
    local DropdownName = Configs.Name or "Dropdown"
    local Options = Configs.Options or {"1", "2", "3"}
    local Default = Configs.Default or Options[1]
    local Callback = Configs.Callback or function() end

    local TextButton = Create("TextButton", parent, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Text = "",
        AutoButtonColor = false
    })
    Corner(TextButton)
    Stroke(TextButton)

    local TextLabel = Create("TextLabel", TextButton, {
        Text = DropdownName,
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        Font = Configs_HUB.Text_Font,
        Size = UDim2.new(1, -35, 1, 0),
        Position = UDim2.new(0, 35, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = Enum.TextXAlignment.Left
    })
    TextSetColor(TextLabel)

    local SelectedLabel = Create("TextLabel", TextButton, {
        Text = Default,
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_DarkText,
        Font = Configs_HUB.Text_Font,
        Size = UDim2.new(0, 100, 1, 0),
        Position = UDim2.new(1, -105, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = Enum.TextXAlignment.Right
    })

    local OptionsFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 0),
        Position = UDim2.new(0, 0, 0, TextButton.Size.Y.Offset),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Visible = false,
        ClipsDescendants = true
    })
    Corner(OptionsFrame)
    Stroke(OptionsFrame)

    local UIList = Create("UIListLayout", OptionsFrame, {})
    UIList.SortOrder = Enum.SortOrder.LayoutOrder

    local optionButtons = {}
    for i, option in ipairs(Options) do
        local OptionBtn = Create("TextButton", OptionsFrame, {
            Text = option,
            TextSize = 12,
            TextColor3 = Configs_HUB.Cor_Text,
            Font = Configs_HUB.Text_Font,
            Size = UDim2.new(1, 0, 0, 25),
            BackgroundTransparency = 1
        })
        OptionBtn.MouseButton1Click:Connect(function()
            SelectedLabel.Text = option
            OptionsFrame.Visible = false
            OptionsFrame.Size = UDim2.new(1, 0, 0, 0)
            Callback(option)
        end)
        TextSetColor(OptionBtn)
        table.insert(optionButtons, OptionBtn)
    end

    TextButton.MouseButton1Click:Connect(function()
        if OptionsFrame.Visible then
            OptionsFrame.Visible = false
            OptionsFrame.Size = UDim2.new(1, 0, 0, 0)
        else
            OptionsFrame.Visible = true
            OptionsFrame.Size = UDim2.new(1, 0, 0, #Options*25)
        end
    end)

    return {DropdownButton = TextButton, OptionsFrame = OptionsFrame, SelectedLabel = SelectedLabel}
end

function AddTextBox(parent, Configs)
    local TextBoxName = Configs.Name or "TextBox!!"
    local Default = Configs.Default or "TextBox"
    local placeholderText = Configs.PlaceholderText or "TextBox"
    local ClearText = Configs.ClearText or false
    local Callback = Configs.Callback or function() end
    
    local Frame = Create("Frame", parent, {
      Size = UDim2.new(1, 0, 0, 25),
      BackgroundColor3 = Configs_HUB.Cor_Options,
      Name = "Frame"
    })Corner(Frame)Stroke(Frame)
    
    local TextLabel = Create("TextButton", Frame, {
      TextSize = 12,
      TextColor3 = Configs_HUB.Cor_Text,
      Text = TextBoxName,
      Size = UDim2.new(1, 0, 1, 0),
      Position = UDim2.new(0, 150, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = Configs_HUB.Text_Font
    })
    TextSetColor(TextLabel)
    
    local TextBox = Create("TextBox", Frame, {
      Size = UDim2.new(0, 120, 0, 20),
      Position = UDim2.new(0, 15, 0, 2.5),
      TextColor3 = Configs_HUB.Cor_Text,
      Text = Default,
      ClearTextOnFocus = ClearText,
      PlaceholderText = placeholderText,
      TextScaled = true,
      Font = Configs_HUB.Text_Font,
      BackgroundTransparency = 1
    })
    
    local Line = Create("Frame", TextBox, {
      Size = UDim2.new(1, 0, 0, 1),
      Position = UDim2.new(0.5, 0, 1, 0),
      AnchorPoint = Vector2.new(0.5, 0.5),
      BackgroundColor3 = Configs_HUB.Cor_Stroke,
      BorderSizePixel = 0
    })
    
    TextBox.MouseEnter:Connect(function()
      CreateTween(Line, "Size", UDim2.new(0, 0, 0, 1), 0.3, true)
      CreateTween(Line, "Size", UDim2.new(1, 0, 0, 1), 0.3, true)
    end)
    
    TextBox.FocusLost:Connect(function()
      Callback(TextBox.Text)
    end)
  end
  function AddSlider(parent, Configs)
local SliderName = Configs.Name or "Slider!!"
local Increase = Configs.Increase or 1
local MinValue = Configs.MinValue / Increase or 10 / Increase
local MaxValue = Configs.MaxValue / Increase or 100 / Increase
local Default = Configs.Default or 25
local Callback = Configs.Callback or function() end

local Frame = Create("TextButton", parent, {  
  Size = UDim2.new(1, 0, 0, 25),  
  BackgroundColor3 = Configs_HUB.Cor_Options,  
  Name = "Frame",  
  Text = 0  
})Corner(Frame)Stroke(Frame)  
  
local TextLabel = Create("TextButton", Frame, {  
  TextSize = 12,  
  TextColor3 = Configs_HUB.Cor_Text,  
  Text = SliderName,  
  Size = UDim2.new(1, 0, 1, 0),  
  Position = UDim2.new(0, 150, 0, 0),  
  BackgroundTransparency = 1,  
  TextXAlignment = "Left",  
  Font = Configs_HUB.Text_Font  
})TextSetColor(TextLabel)  
  
local TextLabelNumber = Create("TextLabel", Frame, {  
  Font = Configs_HUB.Text_Font,  
  Size = UDim2.new(0, 20, 0, 20),  
  Text = "...",  
  Position = UDim2.new(0, 5, 0, 2.5),  
  TextScaled = true,  
  TextColor3 = Configs_HUB.Cor_Text,  
  BackgroundTransparency = 1  
})  
  
local SliderBar1 = Create("TextLabel", Frame, {  
  Size = UDim2.new(0, 100, 0, 7.5),  
  Position = UDim2.new(0, 35, 0.5, 0),  
  AnchorPoint = Vector2.new(0, 0.5),  
  BackgroundColor3 = Configs_HUB.Cor_Stroke,  
  Text = ""  
})Corner(SliderBar1)  
  
local SavePos = Create("Frame", SliderBar1, {  
  Size = UDim2.new(0, 1, 0, 0),  
  Visible = false  
})  
  
local Slider = Create("Frame", SliderBar1, {  
  BackgroundColor3 = Configs_HUB.Cor_Text,  
  Size = UDim2.new(0, 7.5, 0, 15),  
  Position = UDim2.new(0, 0, 0.5, 0),  
  AnchorPoint = Vector2.new(0, 0.5),  
  Active = true,  
  Draggable = true  
})Corner(Slider)  
  
local SliderBar2 = Create("Frame", SliderBar1, {  
  BackgroundColor3 = Color3.fromRGB(30, 140, 200),  
  Size = UDim2.new(0, Slider.Position.X.Offset, 1, 0)  
})Corner(SliderBar2)  
  
local function UpdCounter(Value)  
  local String = tostring(Value * Increase)  
  if string.find(String, ".") then  
    String = String:sub(1, 5)  
  end  
  TextLabelNumber.Text = String  
  Callback(Value * Increase)  
end  
  
local MouseEnterOrLeave = false  
Frame.MouseButton1Down:Connect(function()  
  MouseEnterOrLeave = true  
  while MouseEnterOrLeave do task.wait()  
    local MousePos = UserInputService:GetMouseLocation().X - SavePos.AbsolutePosition.X  
    Slider.Position = UDim2.new(0, MousePos, 0.5, 0)  
  end  
end)  
Frame.MouseLeave:Connect(function()  
  MouseEnterOrLeave = false  
end)  
  
local function SliderSet(NewValue)  
  local max, min = MaxValue * Increase, MinValue * Increase  
  local SliderPos = (NewValue - min) / (max - min)  
  local X_Offset = SliderPos * 100  
  local SliderPosition = UDim2.new(0, X_Offset + 1, 0, 0)  
  CreateTween(Slider, "Position", SliderPosition, 0.5, false)  
end  
SliderSet(Default)  
  
Slider.Changed:Connect(function(prop)  
  if prop == "Position" then  
    Slider.Position = UDim2.new(0, math.clamp(Slider.Position.X.Offset, 0, 100), 0.5, 0)  
    SliderBar2.Size = UDim2.new(0, Slider.Position.X.Offset, 1, 0)  
    local SliderPos = Slider.Position.X.Offset / 100  
    local A_1 = math.floor(((SliderPos * MaxValue) / MaxValue) * (MaxValue - MinValue) + MinValue)  
    UpdCounter(A_1)  
  end  
end)  
return {Slider, Increase, MaxValue, MinValue}

end

function UpdateSlider(Slider, NewValue)
local Frame = Slider[1]
local Increase = Slider[2]
local Max = Slider[3] * Increase
local Min = Slider[4] * Increase

local SliderPos = (NewValue - Min) / (Max - Min)  
local X_Offset = SliderPos * 100  
local SliderPosition = UDim2.new(0, X_Offset + 1, 0, 0)  
CreateTween(Frame, "Position", SliderPosition, 0.5, false)

end
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local Player = Players.LocalPlayer

local expansionEnabled = false
local expansionModel
local expansionSound
local originalSky

function AddColorPicker(parent, Configs)
    local name = Configs.Name or "Color Picker"
    local Default = Configs.Default or Color3.fromRGB(0, 0, 200)
    local Flag = Configs.Flag
    local Callback = Configs.Callback or function() end

    if Flag and LoadColorPickerFlag then
        local saved = LoadColorPickerFlag(Flag)
        if saved then Default = saved end
    end

    local ColorH, ColorS, ColorV = Color3.toHSV(Default)
    Callback(Default)

    local TextButton = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
    }) Stroke(TextButton) Corner(TextButton)

    local click = Create("TextButton", TextButton, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundTransparency = 1,
        AutoButtonColor = false,
        Text = ""
    })

    local TextLabel = Create("TextLabel", TextButton, {
        Size = UDim2.new(1, -10, 0, 25),
        Position = UDim2.new(0, 35, 0, 0),
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        TextXAlignment = "Left",
        Text = name,
        Font = Configs_HUB.Text_Font,
        BackgroundTransparency = 1
    })

    local picker = Create("Frame", TextButton, {
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(0, 5, 0, 2.5),
        BackgroundColor3 = Default
    }) Corner(picker) Stroke(picker)

    local UI_Grade = Create("ImageButton", TextButton, {
        Size = UDim2.new(1, -100, 1, tonumber(-TextButton.Size.Y.Offset - 20)),
        Position = UDim2.new(0, 10, 0, tonumber(TextButton.Size.Y.Offset + 12.5)),
        Visible = false,
        Image = "rbxassetid://4155801252"
    }) Corner(UI_Grade) Stroke(UI_Grade)
    local SavePos = Create("Frame", UI_Grade, {Visible = false})

    local grade = Create("TextButton", TextButton, {
        Size = UDim2.new(0, 30, 1, tonumber(-TextButton.Size.Y.Offset - 20)),
        Position = UDim2.new(1, -10, 0, tonumber(TextButton.Size.Y.Offset + 12.5)),
        AnchorPoint = Vector2.new(1, 0),
        Visible = false,
        Text = ""
    }) Corner(grade) Stroke(grade) Create("UIGradient", grade, {
        Rotation = 90,
        Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)),
            ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)),
            ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)),
            ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)),
            ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)),
            ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)),
            ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))
        })
    })
    local SavePos2 = Create("Frame", grade, {Visible = false, Size = UDim2.new(1, 0, 0, 0)})

    local A_1 = Create("Frame", TextButton, {
        Size = UDim2.new(1, 0, 0, 0),
        Position = UDim2.new(0, 0, 0, 30),
        Visible = false
    }) Stroke(A_1)

    local Select1 = Create("Frame", grade, {
        Size = UDim2.new(1, 0, 0, 10),
        Position = UDim2.new(0, 0, 0, select(3, Color3.toHSV(Default))),
        BackgroundTransparency = 1,
        Active = true,
        Draggable = true
    }) Corner(Select1, {CornerRadius = UDim.new(2, 0)}) Stroke(Select1, {Color = Color3.fromRGB(255, 255, 255)})

    local Select2 = Create("Frame", UI_Grade, {
        Size = UDim2.new(0, 15, 0, 15),
        Position = UDim2.new(0, select(2, Color3.toHSV(Default)), 0, select(1, Color3.toHSV(Default))),
        BackgroundTransparency = 1,
        Active = true,
        Draggable = true
    }) Corner(Select2, {CornerRadius = UDim.new(2, 0)}) Stroke(Select2, {Color = Color3.fromRGB(255, 255, 255)})

    UI_Grade.MouseButton1Click:Connect(function()
        local mouse = UserInputService:GetMouseLocation()
        local savepos = SavePos.AbsolutePosition
        CreateTween(Select2, "Position", UDim2.new(0, mouse.X - savepos.X, 0, tonumber(mouse.Y - savepos.Y) - 35), 0.3, false)
    end)

    grade.MouseButton1Click:Connect(function()
        local mouse = UserInputService:GetMouseLocation().Y - 35
        local savepos = SavePos2.AbsolutePosition.Y
        CreateTween(Select1, "Position", UDim2.new(0, 0, 0, mouse - savepos), 0.3, false)
    end)

    local function callback()
        local col = Color3.fromHSV(ColorH, ColorS, ColorV)
        picker.BackgroundColor3 = col
        if typeof(Callback) == "function" then Callback(col) end
        if Flag and SaveColorPickerFlag then SaveColorPickerFlag(Flag, col) end
    end

    local function updcolorpicker()
        ColorH = tonumber(Select1.Position.Y.Offset) / 80
        ColorS = tonumber(215 - Select2.Position.X.Offset) / 215
        ColorV = tonumber(75 - Select2.Position.Y.Offset) / 75
        UI_Grade.ImageColor3 = Color3.fromHSV(ColorH, 1, 1)
        callback()
    end
    updcolorpicker()

    Select1.Changed:Connect(function(prop)
        if prop == "Position" then
            Select1.Position = UDim2.new(0, 0, 0, math.clamp(Select1.Position.Y.Offset, 0, 80))
            updcolorpicker()
        end
    end)

    Select2.Changed:Connect(function(prop)
        if prop == "Position" then
            Select2.Position = UDim2.new(0, math.clamp(Select2.Position.X.Offset, 0, 222), 0, math.clamp(Select2.Position.Y.Offset, 0, 75))
            updcolorpicker()
        end
    end)

    TextButton.Changed:Connect(function(prop)
        if prop == "Size" then
            if TextButton.Size.Y.Offset >= 60 then
                picker.Position = UDim2.new(0, 5, 0, 5)
                UI_Grade.Visible = true
                A_1.Visible = true
                grade.Visible = true
            else
                picker.Position = UDim2.new(0, 5, 0, 2.5)
                UI_Grade.Visible = false
                A_1.Visible = false
                grade.Visible = false
            end
        end
    end)

    local onoff = false
    click.MouseButton1Click:Connect(function()
        onoff = not onoff
        local newSize = onoff and UDim2.new(1, 0, 0, 140) or UDim2.new(1, 0, 0, 25)
        TweenService:Create(TextButton, TweenInfo.new(0.2, Enum.EasingStyle.Linear), {Size = newSize}):Play()
    end)

    local Colorpicker = {}
    function Colorpicker:Set(value)
        if typeof(value) == "Color3" then
            ColorH, ColorS, ColorV = Color3.toHSV(value)
            picker.BackgroundColor3 = value
            if typeof(Callback) == "function" then Callback(value) end
            if Flag and SaveColorPickerFlag then SaveColorPickerFlag(Flag, value) end
        end
    end
    function Colorpicker:SetColor(col) self:Set(col) end
    function Colorpicker:Destroy() TextButton:Destroy() end
    function Colorpicker:Visible(state) TextButton.Visible = state end
    function Colorpicker:Callback(fn) if typeof(fn) == "function" then Callback = fn end end

    return Colorpicker
end

MinimizeButton({
    OpenImage = "rbxassetid://98360849741395", 
    CloseImage = "rbxassetid://125684503332368", 
    Size = {40, 40},
    Color = Color3.fromRGB(255, 125, 0),
    Corner = true,
    Stroke = false,
    StrokeColor = Color3.fromRGB(255, 125, 0)
})

function RemixLib:Destroy()
	RemixLib:Destroy()
end

return RemixLib
